---
systemd:
  units:
    - name: etcd-member.service
      enable: true
      dropins:
        - name: 40-etcd-cluster.conf
          contents: |
            [Service]
            Environment="ETCD_IMAGE_TAG=v3.2.0"
            Environment="ETCD_NAME={{.etcd_name}}"
            Environment="ETCD_ADVERTISE_CLIENT_URLS=http://{{.domain_name}}:2379"
            Environment="ETCD_INITIAL_ADVERTISE_PEER_URLS=http://{{.domain_name}}:2380"
            Environment="ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379"
            Environment="ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380"
            Environment="ETCD_INITIAL_CLUSTER={{.etcd_initial_cluster}}"
            Environment="ETCD_STRICT_RECONFIG_CHECK=true"
    - name: locksmithd.service
      dropins:
        - name: 40-etcd-lock.conf
          contents: |
            [Service]
            Environment="REBOOT_STRATEGY=etcd-lock"
    - name: swarm-manager-init.service
      enable: true
      contents: |
        [Unit]
        Requires=etcd-member.service docker.service
        After=etcd-member.service docker.service
        [Service]
        Type=simple
        ExecStart=/opt/swarm-manager-init
        [Install]
        WantedBy=multi-user.target
storage:
  files:
    - path: /etc/hostname
      filesystem: root
      mode: 420
      contents: 
        inline: |
          {{.etcd_name}}
    - path: /opt/swarm-manager-init
      filesystem: root
      mode: 0500
      contents:
        inline: |
            #!/bin/bash
            set -x
            HOST=`uname -n`
            ADV_ADR=`/usr/bin/etcdctl get swarm/adv 2>/dev/null`
            if [ "$ADV_ADR" = "" ]
            then
                ADV_ADR=`/usr/bin/dig +short {{.domain_name}}`:2377
                /usr/bin/etcdctl set swarm/adv           ${ADV_ADR}
                /usr/bin/docker swarm init --advertise-addr $ADV_ADR
                TOKEN_MANAGER=`/usr/bin/docker swarm join-token manager --quiet`
                TOKEN_WORKER=`/usr/bin/docker swarm join-token worker --quiet`
                /usr/bin/etcdctl set swarm/token_manager $TOKEN_MANAGER
                /usr/bin/etcdctl set swarm/token_worker  $TOKEN_WORKER
                /usr/bin/etcdctl set swarm/manager/${HOST} 1
            else
                IS_MANAGER=`/usr/bin/etcdctl get swarm/manager/${HOST}  2>/dev/null`
                if [ "$IS_MANAGER" = "1" ]
                then
                    /usr/bin/docker swarm node ls
                else
                    while [ "$TOKEN_MANAGER" = "" ]
                    do 
                        TOKEN_MANAGER=`etcdctl get swarm/token_manager 2>/dev/null`
                        sleep 1
                    done
                    docker swarm join --token $TOKEN_MANAGER $ADV_ADR
                    /usr/bin/etcdctl set swarm/manager/${HOST} 1
                fi                    
            fi
{{ if index . "ssh_authorized_keys" }}
passwd:
  users:
    - name: core
      ssh_authorized_keys:
        {{ range $element := .ssh_authorized_keys }}
        - {{$element}}
        {{end}}
{{end}}

