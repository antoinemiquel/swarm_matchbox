---
systemd:
  units:
    - name: etcd-member.service
      enable: true
      dropins:
        - name: 40-etcd-cluster.conf
          contents: |
            [Service]
            Environment="ETCD_IMAGE_TAG=v3.2.0"
            ExecStart=
            ExecStart=/usr/lib/coreos/etcd-wrapper gateway start \
              --listen-addr=127.0.0.1:2379 \
              --endpoints={{.etcd_endpoints}}
    - name: locksmithd.service
      dropins:
        - name: 40-etcd-lock.conf
          contents: |
            [Service]
            Environment="REBOOT_STRATEGY=etcd-lock"
    - name: swarm-init.service
      enable: true
      contents: |
        [Unit]
        Requires=etcd-member.service docker.service
        After=etcd-member.service docker.service
        [Service]
        Type=simple
        ExecStart=/opt/swarm-init
        [Install]
        WantedBy=multi-user.target
storage:
  files:
    - path: /etc/hostname
      filesystem: root
      mode: 420
      contents: 
        inline: |
          {{.etcd_name}}
    - path: /opt/swarm-init
      filesystem: root
      mode: 0500
      contents:
        inline: |
            #!/bin/bash
            set -x
            HOST=`uname -n`
            IS_WORKER=`/usr/bin/etcdctl get swarm/worker/${HOST}  2>/dev/null`
            if [ "$IS_WORKER" = "1" ]
            then
                echo "ok - swarm node ever define"
            else
                while [ "$TOKEN_WORKER" = "" -o "$ADV" = "" ]
                do 
                    TOKEN_WORKER=`etcdctl get swarm/token_worker 2>/dev/null`
                    ADV=`etcdctl get swarm/adv 2>/dev/null`
                    sleep 1
                done
                docker swarm join --token $TOKEN_WORKER $ADV
                /usr/bin/etcdctl set swarm/worker/${HOST} 1 
            fi
{{ if index . "ssh_authorized_keys" }}
passwd:
  users:
    - name: core
      ssh_authorized_keys:
        {{ range $element := .ssh_authorized_keys }}
        - {{$element}}
        {{end}}
{{end}}

